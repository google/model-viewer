{"version":3,"file":"sidebar.js","sourceRoot":"","sources":["../../src/docs-and-examples/sidebar.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet globalCurrentView: string[] = [];\nlet previouslyActive: string = '';\nlet toRemove = '';\nlet order = new Map<string, number>();\nlet isSideBarClick = false;\n\nlet isFirstOpen = true;      // is true on the first observation of all entries\nlet everyEntry: any[] = [];  // a list of all attributes/properties etc.\n\ninterface SidebarIds {\n  name: string, subcategory: string, category: string\n}\n\nfunction activateSidebar(sidebarIds: SidebarIds) {\n  document.querySelector(`div[id=${sidebarIds.name}]`)!.classList.add('active');\n  document.querySelector(`h4[id=${sidebarIds.subcategory}]`)\n      ?.classList.add('active');\n  document.querySelector(`h3[id=${sidebarIds.category}]`)!.classList.add(\n      'active');\n}\n\nfunction deactivateSidebar(sidebarIds: SidebarIds) {\n  document.querySelector(`div[id=${sidebarIds.name}]`)!.classList.remove(\n      'active');\n  document.querySelector(`h4[id=${sidebarIds.subcategory}]`)\n      ?.classList.remove('active');\n  document.querySelector(`h3[id=${sidebarIds.category}]`)!.classList.remove(\n      'active');\n}\n\nfunction addDeactive(sidebarIds: SidebarIds) {\n  document.querySelector(`div[id=${sidebarIds.name}]`)!.classList.add(\n      'de-active');\n}\n\nfunction addDeactiveCategory(sidebarIds: SidebarIds) {\n  document.querySelector(`h4[id=${sidebarIds.subcategory}]`)\n      ?.classList.add('de-active');\n}\n\nfunction removeDeactive(sidebarIds: SidebarIds) {\n  document.querySelector(`div[id=${sidebarIds.name}]`)!.classList.remove(\n      'de-active');\n}\n\nfunction removeDeactiveCategory(sidebarIds: SidebarIds) {\n  document.querySelector(`h4[id=${sidebarIds.subcategory}]`)\n      ?.classList.remove('de-active');\n}\n\nconst identicalCategories = ['loading', 'augmentedreality', 'stagingandcameras', 'annotations', 'lightingandenv', 'animation', 'scenegraph'];\n\nexport function getSidebarCategoryForNewPage(): string {\n  const category = previouslyActive.split('-')[0];\n  if (identicalCategories.includes(category)) {\n    return category;\n  } else {\n    return 'postprocessing';\n  }\n}\n\nfunction getSidebarIdsFromSidebarName(name: string): SidebarIds {\n  const sb = 'sidebar';\n  const sidebarName = name;\n  let sidebarSub = sidebarName.split('-').slice(0, 2);\n  let sidebarCat = sidebarName.split('-').slice(0, 1);\n  sidebarSub.push(sb);\n  const sidebarSubcategory = sidebarSub.join('-');\n  sidebarCat.push(sb);\n  const sidebarCategory = sidebarCat.join('-');\n  return {\n    name: sidebarName,\n    subcategory: sidebarSubcategory,\n    category: sidebarCategory\n  };\n}\n\nfunction getSidebarIdsFromId(id: string): SidebarIds {\n  const sb = 'sidebar';\n  const sidebarName = id.split('-').slice(1, 10).join('-');\n  let sidebarSub = id.split('-').slice(1, 3);\n  let sidebarCat = id.split('-').slice(1, 2);\n  sidebarSub.push(sb);\n  const sidebarSubcategory = sidebarSub.join('-');\n  sidebarCat.push(sb);\n  const sidebarCategory = sidebarCat.join('-');\n  return {\n    name: sidebarName,\n    subcategory: sidebarSubcategory,\n    category: sidebarCategory\n  };\n}\n\n/*\n * sidebarSubcategory: string of the old subcategory being replaced\n * newSidebarSubcategory: string of the new subcategory\n * example:\n *  sidebarSubcategory = loading-attributes-sidebar\n *  newSidebarSubcategory = loading-cssProperties-sidebar\n */\nfunction updateSidebarView(\n    sidebarSubcategory: string, newSidebarSubcategory: string) {\n  const newCategoryList = newSidebarSubcategory.split('-');\n  const newSidebarCategory = newCategoryList[0].concat('-sidebar');\n  if (sidebarSubcategory !== newSidebarSubcategory) {\n    for (const entry of everyEntry) {\n      const id = entry.target.getAttribute('id');\n      const sidebarIds = getSidebarIdsFromId(id);\n      if (sidebarIds.subcategory !== newSidebarSubcategory) {\n        addDeactive(sidebarIds);\n      } else {\n        removeDeactive(sidebarIds);\n      }\n      if (sidebarIds.category !== newSidebarCategory) {\n        addDeactiveCategory(sidebarIds);\n      } else {\n        removeDeactiveCategory(sidebarIds);\n      }\n    }\n  }\n}\n\n/*\n * Hide all of the entries not within the current subcategory\n * entries should be every entry on the page when this is called\n */\nfunction updateSidebarViewFirstTime(entries: any[]) {\n  isFirstOpen = false;   // global\n  everyEntry = entries;  // Sets global variable for use in updateSidebarView\n  const sidebarIds = getSidebarIdsFromSidebarName(previouslyActive);\n  updateSidebarView('', sidebarIds.subcategory);\n}\n\nfunction updateFromOldToNew(prev: string, sidebarIds: SidebarIds) {\n  const prevSidebarIds = getSidebarIdsFromSidebarName(prev);\n  deactivateSidebar(prevSidebarIds);\n  activateSidebar(sidebarIds);\n  updateSidebarView(prevSidebarIds.subcategory, sidebarIds.subcategory);\n}\n\nfunction removeActiveEntry(sidebarIds: SidebarIds) {\n  deactivateSidebar(sidebarIds);\n  if (globalCurrentView.length >= 2) {\n    const newSidebarIds = getSidebarIdsFromSidebarName(globalCurrentView[1]);\n    activateSidebar(newSidebarIds);\n    updateSidebarView(sidebarIds.subcategory, newSidebarIds.subcategory);\n    previouslyActive = newSidebarIds.name;\n  }\n}\n\nfunction updateHeader() {\n  const sidebarIds = getSidebarIdsFromSidebarName(previouslyActive);\n  const subCat = document.querySelector(`h4[id=${sidebarIds.subcategory}]`)\n                     ?.firstElementChild!.innerHTML;\n  const cat = document.querySelector(`h3[id=${\n      sidebarIds.category}]`)!.firstElementChild!.innerHTML;\n  const outerHeaderId = sidebarIds.category.split('-')[0];\n  const outerHeader = document.querySelector(`h1[id=${outerHeaderId}]`)!;\n  if (subCat) {\n    outerHeader.innerHTML = cat.concat(': ', subCat);\n  }\n}\n\nfunction handleHTMLEntry(htmlEntry: IntersectionObserverEntry) {\n  const id = htmlEntry.target.getAttribute('id')!;\n  const sidebarIds = getSidebarIdsFromId(id);\n\n  // entry inside viewing window\n  if (htmlEntry.intersectionRatio > 0) {\n    if (toRemove.length > 0) {\n      // inside a large div\n      updateFromOldToNew(toRemove, sidebarIds);\n      toRemove = '';\n    } else if (globalCurrentView.length === 0) {\n      // empty globalCurrentView, add to view\n      activateSidebar(sidebarIds);\n      previouslyActive = sidebarIds.name;\n      globalCurrentView.push(sidebarIds.name);\n    } else if (order.get(previouslyActive)! > order.get(sidebarIds.name)!) {\n      // scrolling up\n      updateFromOldToNew(globalCurrentView[0], sidebarIds);\n      globalCurrentView.unshift(sidebarIds.name);\n      previouslyActive = sidebarIds.name;\n    } else {\n      // an entry is in view under the current active entry\n      globalCurrentView.push(sidebarIds.name);\n    }\n  } else if (globalCurrentView.length === 1) {\n    // entry outside viewing window, but entry is the only element\n    toRemove = previouslyActive;\n  } else {\n    // entry outside viewing window, active entry now out of view\n    if (previouslyActive === sidebarIds.name) {\n      // entry being removed from view is currently active\n      removeActiveEntry(sidebarIds);\n    }\n    // always remove entry when out of view\n    globalCurrentView = globalCurrentView.filter(e => e !== sidebarIds.name);\n  }\n}\n\n/*\n * for page jump its just easier to restart, so deactivate everything, clear\n * the global view, then only update with whats in view\n */\nfunction handlePageJump(entries: IntersectionObserverEntry[]) {\n  isSideBarClick = false;\n  toRemove = '';\n  updateSidebarView('', 'null');\n\n  // deactivate all of the entries\n  for (const entry of everyEntry) {\n    const id = entry.target.getAttribute('id');\n    const sidebarIds = getSidebarIdsFromId(id);\n    deactivateSidebar(sidebarIds);\n  }\n\n  // remove entries not in view, add entries that are in view\n  for (const entry of entries) {\n    const id = entry.target.getAttribute('id')!;\n    const sidebarIds = getSidebarIdsFromId(id);\n    if (!entry.isIntersecting) {\n      globalCurrentView = globalCurrentView.filter(e => e !== sidebarIds.name);\n    } else {\n      globalCurrentView.push(sidebarIds.name);\n    }\n  }\n\n  // sort current view\n  globalCurrentView.sort(function(nameA, nameB) {\n    if (order.get(nameA)! < order.get(nameB)!) {\n      return -1;\n    } else if (order.get(nameA)! > order.get(nameB)!) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n\n  // update current view based on the current highest view\n  const sidebarIds = getSidebarIdsFromSidebarName(globalCurrentView[0]);\n  const prevSidebarIds = getSidebarIdsFromSidebarName(previouslyActive);\n  deactivateSidebar(prevSidebarIds);\n  activateSidebar(sidebarIds);\n  updateSidebarView('', sidebarIds.subcategory);\n  previouslyActive = sidebarIds.name;\n}\n\nlet intersectionRatios = new Map<string, number>();\nfunction handleExamples(entries: IntersectionObserverEntry[], _observer: any) {\n  if (isFirstOpen) {\n    everyEntry = entries;\n    isFirstOpen = false;\n    document.querySelector(`h3[id=\"active-container-sidebar\"`)!.classList.add(\n        'active');\n  }\n\n  for (const entry of entries) {\n    const id = entry.target.getAttribute('id')!;\n    intersectionRatios.set(id, entry.intersectionRatio);\n  }\n\n  let maxRatio = 0;\n  let maxName = '';\n  for (const name of intersectionRatios.keys()) {\n    const ratio = intersectionRatios.get(name)!;\n    if (ratio > maxRatio) {\n      maxRatio = ratio;\n      maxName = name;\n    }\n  }\n\n  for (const entry of everyEntry) {\n    const id = entry.target.getAttribute('id')!;\n    const sidebarName = `container-${id}-sidebar`;\n    const sidebarElement = document.querySelector(`h4[id=${sidebarName}`);\n    if (sidebarElement == null) {\n      return;\n    }\n    if (id === maxName) {\n      sidebarElement.classList.add('active');\n    } else {\n      sidebarElement.classList.remove('active');\n    }\n  }\n}\n\n/*\n * Update the table of contents based on how the page is viewed.\n */\nexport function sidebarDocsObserver() {\n  const observer = new IntersectionObserver(entries => {\n    if (isSideBarClick) {  // sidebar click\n      handlePageJump(entries);\n    } else {  // scroll\n      for (const htmlEntry of entries) {\n        handleHTMLEntry(htmlEntry);\n      }\n    }\n    if (isFirstOpen) {  // page load\n      updateSidebarViewFirstTime(entries);\n    }\n    updateHeader();\n  });\n  // i.e. attributes, properties, events, methods, slots, custom css.\n  let orderIndex = 0;\n  document.querySelectorAll('div[id*=\"entrydocs\"]').forEach((section) => {\n    const idSplitList = section.getAttribute('id')!.split('-');\n    const id = idSplitList.slice(1, 10).join('-');\n    order.set(id, orderIndex);\n    orderIndex += 1;\n    observer.observe(section);\n  });\n}\n\nexport function sidebarExamplesObserver() {\n  const options = {\n    root: null,\n    rootMargin: '0px',\n    threshold: [0, 0.25, 0.5, 0.75, 1],\n  };\n  const observer = new IntersectionObserver(handleExamples, options);\n  document.querySelectorAll('div[class=\"demo\"]').forEach((section) => {\n    observer.observe(section);\n  });\n}\n\nexport function sidebarClick() {\n  isSideBarClick = true;\n  // close sidebar if click in sidebar on mobile\n  if (window.innerWidth <= 800) {\n    const root = document.documentElement;\n    root.style.setProperty('--sidebar-width', '0px');\n  }\n}\n\n(self as any).sidebarClick = sidebarClick;"]}